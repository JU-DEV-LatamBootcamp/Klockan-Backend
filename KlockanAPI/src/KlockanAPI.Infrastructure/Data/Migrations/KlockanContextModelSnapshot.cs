// <auto-generated />
using System;
using KlockanAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KlockanAPI.Infrastructure.Data.Migrations
{
    [DbContext(typeof(KlockanContext))]
    partial class KlockanContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KlockanAPI.Domain.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "BA",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9514),
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = 2,
                            Code = "COR",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9516),
                            Name = "Córdoba"
                        },
                        new
                        {
                            Id = 3,
                            Code = "ROS",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9517),
                            Name = "Rosario"
                        },
                        new
                        {
                            Id = 4,
                            Code = "MDZ",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9519),
                            Name = "Mendoza"
                        },
                        new
                        {
                            Id = 5,
                            Code = "TUC",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9520),
                            Name = "San Miguel de Tucumán"
                        },
                        new
                        {
                            Id = 6,
                            Code = "LP",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9521),
                            Name = "La Plata"
                        },
                        new
                        {
                            Id = 7,
                            Code = "MDQ",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9522),
                            Name = "Mar del Plata"
                        },
                        new
                        {
                            Id = 8,
                            Code = "SLA",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9523),
                            Name = "Salta"
                        },
                        new
                        {
                            Id = 9,
                            Code = "SFN",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9524),
                            Name = "Santa Fe"
                        },
                        new
                        {
                            Id = 10,
                            Code = "SJU",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9526),
                            Name = "San Juan"
                        },
                        new
                        {
                            Id = 11,
                            Code = "TUC",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9527),
                            Name = "Tucumán"
                        },
                        new
                        {
                            Id = 12,
                            Code = "NEU",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9528),
                            Name = "Neuquén"
                        },
                        new
                        {
                            Id = 13,
                            Code = "BHI",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9529),
                            Name = "Bahía Blanca"
                        },
                        new
                        {
                            Id = 14,
                            Code = "RES",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9530),
                            Name = "Resistencia"
                        },
                        new
                        {
                            Id = 15,
                            Code = "FOR",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9531),
                            Name = "Formosa"
                        },
                        new
                        {
                            Id = 16,
                            Code = "COR",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9532),
                            Name = "Corrientes"
                        },
                        new
                        {
                            Id = 17,
                            Code = "POS",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9533),
                            Name = "Posadas"
                        },
                        new
                        {
                            Id = 18,
                            Code = "JUJ",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9534),
                            Name = "San Salvador de Jujuy"
                        },
                        new
                        {
                            Id = 19,
                            Code = "PAR",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9535),
                            Name = "Paraná"
                        },
                        new
                        {
                            Id = 20,
                            Code = "SRO",
                            CountryId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9536),
                            Name = "Santa Rosa"
                        },
                        new
                        {
                            Id = 21,
                            Code = "LP",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9537),
                            Name = "La Paz"
                        },
                        new
                        {
                            Id = 22,
                            Code = "SCZ",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9538),
                            Name = "Santa Cruz de la Sierra"
                        },
                        new
                        {
                            Id = 23,
                            Code = "CBBA",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9539),
                            Name = "Cochabamba"
                        },
                        new
                        {
                            Id = 24,
                            Code = "SUC",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9540),
                            Name = "Sucre"
                        },
                        new
                        {
                            Id = 25,
                            Code = "TJA",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9541),
                            Name = "Tarija"
                        },
                        new
                        {
                            Id = 26,
                            Code = "PTS",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9542),
                            Name = "Potosí"
                        },
                        new
                        {
                            Id = 27,
                            Code = "ORU",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9543),
                            Name = "Oruro"
                        },
                        new
                        {
                            Id = 28,
                            Code = "CBI",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9544),
                            Name = "Cobija"
                        },
                        new
                        {
                            Id = 29,
                            Code = "TRI",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9544),
                            Name = "Trinidad"
                        },
                        new
                        {
                            Id = 30,
                            Code = "RIB",
                            CountryId = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9545),
                            Name = "Riberalta"
                        },
                        new
                        {
                            Id = 31,
                            Code = "SP",
                            CountryId = 3,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9546),
                            Name = "São Paulo"
                        },
                        new
                        {
                            Id = 32,
                            Code = "RJ",
                            CountryId = 3,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9547),
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 33,
                            Code = "SCL",
                            CountryId = 4,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9549),
                            Name = "Santiago"
                        },
                        new
                        {
                            Id = 34,
                            Code = "VAL",
                            CountryId = 4,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9550),
                            Name = "Valparaíso"
                        },
                        new
                        {
                            Id = 35,
                            Code = "BOG",
                            CountryId = 5,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9551),
                            Name = "Bogotá"
                        },
                        new
                        {
                            Id = 36,
                            Code = "MDE",
                            CountryId = 5,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9552),
                            Name = "Medellín"
                        },
                        new
                        {
                            Id = 37,
                            Code = "SJ",
                            CountryId = 6,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9553),
                            Name = "San José"
                        },
                        new
                        {
                            Id = 38,
                            Code = "LM",
                            CountryId = 6,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9554),
                            Name = "Limon"
                        },
                        new
                        {
                            Id = 39,
                            Code = "LH",
                            CountryId = 7,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9555),
                            Name = "La Habana"
                        },
                        new
                        {
                            Id = 40,
                            Code = "SC",
                            CountryId = 7,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9556),
                            Name = "Santiago de Cuba"
                        },
                        new
                        {
                            Id = 41,
                            Code = "SD",
                            CountryId = 8,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9557),
                            Name = "Santo Domingo"
                        },
                        new
                        {
                            Id = 42,
                            Code = "SC",
                            CountryId = 8,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9558),
                            Name = "Santiago de los Caballeros"
                        },
                        new
                        {
                            Id = 43,
                            Code = "QT",
                            CountryId = 9,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9559),
                            Name = "Quito"
                        },
                        new
                        {
                            Id = 44,
                            Code = "GQ",
                            CountryId = 9,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9560),
                            Name = "Guayaquil"
                        },
                        new
                        {
                            Id = 45,
                            Code = "SS",
                            CountryId = 10,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9561),
                            Name = "San Salvador"
                        },
                        new
                        {
                            Id = 46,
                            Code = "SA",
                            CountryId = 10,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9562),
                            Name = "Santa Ana"
                        },
                        new
                        {
                            Id = 47,
                            Code = "GC",
                            CountryId = 11,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9563),
                            Name = "Guatemala City"
                        },
                        new
                        {
                            Id = 48,
                            Code = "QZ",
                            CountryId = 11,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9612),
                            Name = "Quetzaltenango"
                        },
                        new
                        {
                            Id = 49,
                            Code = "PA",
                            CountryId = 12,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9613),
                            Name = "Port-au-Prince"
                        },
                        new
                        {
                            Id = 50,
                            Code = "CH",
                            CountryId = 12,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9614),
                            Name = "Cap-Haïtien"
                        },
                        new
                        {
                            Id = 51,
                            Code = "TG",
                            CountryId = 13,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9615),
                            Name = "Tegucigalpa"
                        },
                        new
                        {
                            Id = 52,
                            Code = "SPS",
                            CountryId = 13,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9616),
                            Name = "San Pedro Sula"
                        },
                        new
                        {
                            Id = 53,
                            Code = "MXC",
                            CountryId = 14,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9617),
                            Name = "Mexico City"
                        },
                        new
                        {
                            Id = 54,
                            Code = "GDL",
                            CountryId = 14,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9618),
                            Name = "Guadalajara"
                        },
                        new
                        {
                            Id = 55,
                            Code = "MN",
                            CountryId = 15,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9619),
                            Name = "Managua"
                        },
                        new
                        {
                            Id = 56,
                            Code = "LN",
                            CountryId = 15,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9620),
                            Name = "León"
                        },
                        new
                        {
                            Id = 57,
                            Code = "PC",
                            CountryId = 16,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9621),
                            Name = "Panama City"
                        },
                        new
                        {
                            Id = 58,
                            Code = "DV",
                            CountryId = 16,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9622),
                            Name = "David"
                        },
                        new
                        {
                            Id = 59,
                            Code = "ASU",
                            CountryId = 17,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9623),
                            Name = "Asunción"
                        },
                        new
                        {
                            Id = 60,
                            Code = "CDE",
                            CountryId = 17,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9624),
                            Name = "Ciudad del Este"
                        },
                        new
                        {
                            Id = 61,
                            Code = "LM",
                            CountryId = 18,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9625),
                            Name = "Lima"
                        },
                        new
                        {
                            Id = 62,
                            Code = "AR",
                            CountryId = 18,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9626),
                            Name = "Arequipa"
                        },
                        new
                        {
                            Id = 63,
                            Code = "SJ",
                            CountryId = 19,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9627),
                            Name = "San Juan"
                        },
                        new
                        {
                            Id = 64,
                            Code = "PC",
                            CountryId = 19,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9628),
                            Name = "Ponce"
                        },
                        new
                        {
                            Id = 65,
                            Code = "MTV",
                            CountryId = 20,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9629),
                            Name = "Montevideo"
                        },
                        new
                        {
                            Id = 66,
                            Code = "ST",
                            CountryId = 20,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9629),
                            Name = "Salto"
                        },
                        new
                        {
                            Id = 67,
                            Code = "CCS",
                            CountryId = 21,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9630),
                            Name = "Caracas"
                        },
                        new
                        {
                            Id = 68,
                            Code = "MAR",
                            CountryId = 21,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9631),
                            Name = "Maracaibo"
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ProgramId");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProgramId = 1,
                            StartDate = new DateOnly(2024, 2, 23)
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProgramId = 1,
                            StartDate = new DateOnly(2024, 2, 23)
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProgramId = 2,
                            StartDate = new DateOnly(2024, 2, 23)
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.ClassroomUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassroomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("ClassroomUsers");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AR",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9400),
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 2,
                            Code = "BO",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9401),
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = 3,
                            Code = "BR",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9402),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 4,
                            Code = "CL",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9403),
                            Name = "Chile"
                        },
                        new
                        {
                            Id = 5,
                            Code = "CO",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9404),
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = 6,
                            Code = "CR",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9405),
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = 7,
                            Code = "CU",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9406),
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = 8,
                            Code = "DO",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9407),
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            Id = 9,
                            Code = "EC",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9408),
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = 10,
                            Code = "SV",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9409),
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = 11,
                            Code = "GT",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9409),
                            Name = "Guatemala"
                        },
                        new
                        {
                            Id = 12,
                            Code = "HT",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9410),
                            Name = "Haiti"
                        },
                        new
                        {
                            Id = 13,
                            Code = "HN",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9411),
                            Name = "Honduras"
                        },
                        new
                        {
                            Id = 14,
                            Code = "MX",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9412),
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = 15,
                            Code = "NI",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9413),
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Id = 16,
                            Code = "PA",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9414),
                            Name = "Panama"
                        },
                        new
                        {
                            Id = 17,
                            Code = "PY",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9415),
                            Name = "Paraguay"
                        },
                        new
                        {
                            Id = 18,
                            Code = "PE",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9470),
                            Name = "Peru"
                        },
                        new
                        {
                            Id = 19,
                            Code = "PR",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9471),
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = 20,
                            Code = "UY",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9472),
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = 21,
                            Code = "VE",
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9473),
                            Name = "Venezuela"
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SessionDuration")
                        .HasColumnType("integer");

                    b.Property<int?>("Sessions")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Course to develop Web Applications focusing on HTML, CSS, JavaScript, and popular frameworks.",
                            Name = "Frontend Development",
                            SessionDuration = 60,
                            Sessions = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Course on server side programming, databases, and API construction.",
                            Name = "Backend Development",
                            SessionDuration = 75,
                            Sessions = 12
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Comprehensive course covering both frontend and backend development to build complete applications.",
                            Name = "Full Stack Development",
                            SessionDuration = 90,
                            Sessions = 15
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassroomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SessionNumber")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time without time zone");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("TrainerId");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassroomId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateOnly(2024, 1, 23),
                            SessionNumber = 3,
                            Time = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Id = 2,
                            ClassroomId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateOnly(2024, 1, 23),
                            SessionNumber = 3,
                            Time = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Id = 3,
                            ClassroomId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateOnly(2024, 1, 23),
                            SessionNumber = 3,
                            Time = new TimeOnly(15, 30, 0)
                        },
                        new
                        {
                            Id = 4,
                            ClassroomId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateOnly(2024, 1, 23),
                            SessionNumber = 3,
                            Time = new TimeOnly(15, 30, 0)
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.MeetingAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassroomUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MeetingAttendanceStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("MeetingId")
                        .HasColumnType("integer");

                    b.Property<int>("MinutesAttended")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomUserId");

                    b.HasIndex("MeetingAttendanceStatusId");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingAttendances");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.MeetingAttendanceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("MeetingAttendanceStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9883),
                            Name = "Present"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9885),
                            Name = "Absent"
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Program covering concepts in software development.",
                            Name = "Bootcamp Developers 01"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Program focused on advanced software design and development techniques.",
                            Name = "Advanced Bootcamp Developers 01"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Program designed to teach the fundamentals of data analysis, machine learning, and statistical modeling.",
                            Name = "Bootcamp Data Science and Analytics 01"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Program covering concepts in software development.",
                            Name = "Bootcamp Developers 02"
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9697),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9699),
                            Name = "Trainer"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9700),
                            Name = "Student"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9701),
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassroomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WeekdayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("WeekdayId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassroomId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartTime = new TimeOnly(15, 30, 0),
                            WeekdayId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClassroomId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartTime = new TimeOnly(15, 30, 0),
                            WeekdayId = 3
                        },
                        new
                        {
                            Id = 3,
                            ClassroomId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartTime = new TimeOnly(15, 30, 0),
                            WeekdayId = 5
                        },
                        new
                        {
                            Id = 4,
                            ClassroomId = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartTime = new TimeOnly(15, 30, 0),
                            WeekdayId = 7
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "https://randomuser.me/api/portraits/men/81.jpg",
                            Birthdate = new DateOnly(1990, 5, 15),
                            CityId = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9758),
                            Email = "martin.lopez@jala.university",
                            FirstName = "Martín",
                            LastName = "López",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "https://randomuser.me/api/portraits/women/24.jpg",
                            Birthdate = new DateOnly(1988, 8, 20),
                            CityId = 3,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9799),
                            Email = "lucia.martinez@jala.university",
                            FirstName = "Lucía",
                            LastName = "Martínez",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Avatar = "https://randomuser.me/api/portraits/men/73.jpg",
                            Birthdate = new DateOnly(1992, 3, 10),
                            CityId = 21,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9805),
                            Email = "carlos.gutierrez@jala.university",
                            FirstName = "Carlos",
                            LastName = "Gutiérrez",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Avatar = "https://randomuser.me/api/portraits/women/38.jpg",
                            Birthdate = new DateOnly(1991, 11, 25),
                            CityId = 22,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9808),
                            Email = "maria.perez@jala.university",
                            FirstName = "María",
                            LastName = "Pérez",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 5,
                            Avatar = "https://randomuser.me/api/portraits/men/93.jpg",
                            Birthdate = new DateOnly(1985, 7, 3),
                            CityId = 35,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9811),
                            Email = "alejandro.rodriguez@jala.university",
                            FirstName = "Alejandro",
                            LastName = "Rodríguez",
                            RoleId = 4
                        },
                        new
                        {
                            Id = 6,
                            Avatar = "https://randomuser.me/api/portraits/women/61.jpg",
                            Birthdate = new DateOnly(1989, 9, 12),
                            CityId = 36,
                            CreatedAt = new DateTime(2024, 2, 22, 15, 34, 37, 278, DateTimeKind.Utc).AddTicks(9815),
                            Email = "camila.gomez@jala.university",
                            FirstName = "Camila",
                            LastName = "Gómez",
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Weekday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Weekdays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sunday"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monday"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tuesday"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wednesday"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thursday"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Friday"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Saturday"
                        });
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.City", b =>
                {
                    b.HasOne("KlockanAPI.Domain.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Classroom", b =>
                {
                    b.HasOne("KlockanAPI.Domain.Models.Course", "Course")
                        .WithMany("Classrooms")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlockanAPI.Domain.Models.Program", "Program")
                        .WithMany("Classrooms")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.ClassroomUser", b =>
                {
                    b.HasOne("KlockanAPI.Domain.Models.Classroom", "Classroom")
                        .WithMany("ClassroomUsers")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlockanAPI.Domain.Models.Role", "Role")
                        .WithMany("ClassroomUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlockanAPI.Domain.Models.User", "User")
                        .WithMany("ClassroomUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Meeting", b =>
                {
                    b.HasOne("KlockanAPI.Domain.Models.Classroom", "Classroom")
                        .WithMany("Meetings")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlockanAPI.Domain.Models.ClassroomUser", "Trainer")
                        .WithMany("Meetings")
                        .HasForeignKey("TrainerId");

                    b.Navigation("Classroom");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.MeetingAttendance", b =>
                {
                    b.HasOne("KlockanAPI.Domain.Models.ClassroomUser", "User")
                        .WithMany("MeetingAttendances")
                        .HasForeignKey("ClassroomUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlockanAPI.Domain.Models.MeetingAttendanceStatus", "Status")
                        .WithMany("MeetingAttendances")
                        .HasForeignKey("MeetingAttendanceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlockanAPI.Domain.Models.Meeting", "Meeting")
                        .WithMany("MeetingAttendances")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Schedule", b =>
                {
                    b.HasOne("KlockanAPI.Domain.Models.Classroom", "Classroom")
                        .WithMany("Schedule")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlockanAPI.Domain.Models.Weekday", "Weekday")
                        .WithMany("Schedules")
                        .HasForeignKey("WeekdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Weekday");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.User", b =>
                {
                    b.HasOne("KlockanAPI.Domain.Models.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlockanAPI.Domain.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.City", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Classroom", b =>
                {
                    b.Navigation("ClassroomUsers");

                    b.Navigation("Meetings");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.ClassroomUser", b =>
                {
                    b.Navigation("MeetingAttendances");

                    b.Navigation("Meetings");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Course", b =>
                {
                    b.Navigation("Classrooms");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Meeting", b =>
                {
                    b.Navigation("MeetingAttendances");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.MeetingAttendanceStatus", b =>
                {
                    b.Navigation("MeetingAttendances");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Program", b =>
                {
                    b.Navigation("Classrooms");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Role", b =>
                {
                    b.Navigation("ClassroomUsers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.User", b =>
                {
                    b.Navigation("ClassroomUsers");
                });

            modelBuilder.Entity("KlockanAPI.Domain.Models.Weekday", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
